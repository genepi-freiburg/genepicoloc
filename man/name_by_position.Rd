% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/name_by_position.R
\name{name_by_position}
\alias{name_by_position}
\title{Find SNP Names by Genomic Position}
\usage{
name_by_position(
  sumstats,
  CHR_name = "CHR_hg38",
  POS_name = "POS_hg38",
  A1_name = "A1_hg38",
  A2_name = "A2_hg38",
  tabix_bin = "/usr/bin/tabix",
  dbSNP_file,
  tmp_name = NULL,
  do_sorting = TRUE,
  keep_lower = FALSE
)
}
\arguments{
\item{sumstats}{A data.table containing summary statistics with genomic coordinates}

\item{CHR_name}{Character. Column name for chromosome (default: "CHR_hg38")}

\item{POS_name}{Character. Column name for genomic position (default: "POS_hg38")}

\item{A1_name}{Character. Column name for first allele (default: "A1_hg38")}

\item{A2_name}{Character. Column name for second allele (default: "A2_hg38")}

\item{tabix_bin}{Character. Path to tabix binary (default: "/usr/bin/tabix")}

\item{dbSNP_file}{Character. Path to tabix-indexed dbSNP VCF file}

\item{tmp_name}{Character. Temporary file prefix (default: NULL, uses tempfile())}

\item{do_sorting}{Logical. Whether to sort output by position (default: TRUE)}

\item{keep_lower}{Logical. Whether to keep lowercase alleles (default: FALSE)}
}
\value{
A data.table with additional columns:
\itemize{
\item \strong{rs}: dbSNP rs identifiers
\item \strong{Name_hg38}: Standardized variant names (CHR:POS:REF:ALT format)
}
}
\description{
Matches genomic variants to dbSNP identifiers and standardized names using
chromosomal position and allele information. This function queries a tabix-indexed
dbSNP VCF file to find matching variants and harmonizes allele coding.
}
\details{
This function performs the following steps:
\enumerate{
\item Validates input data and converts to appropriate formats
\item Adds 'chr' prefix to chromosomes if missing (required for UCSC format)
\item Converts alleles to uppercase (unless keep_lower=TRUE)
\item Uses tabix to query dbSNP file for each chromosome
\item Matches variants by position and allele combination
\item Returns harmonized variant names and rs identifiers
}

The function handles ambiguous allele orders by trying both A1/A2 and A2/A1
combinations and provides matching statistics to help assess data quality.
}
\section{Required Files}{

You need a tabix-indexed dbSNP VCF file. To create one:
\enumerate{
\item Download dbSNP VCF from NCBI or Ensembl
\item Process to create a 6-column format: CHR, POS, RS_ID, REF, ALT, NAME
\item Compress with bgzip and index with tabix
}

Expected file format (tab-separated):
\preformatted{
chr1    10001   rs1570391677   T   A   chr1:10001:T:A
chr1    10001   rs1570391677   T   C   chr1:10001:T:C
chr1    10002   rs1570391692   A   C   chr1:10002:A:C
}
}

\section{Dependencies}{

Requires tabix binary to be installed and accessible. Install via:
\itemize{
\item Ubuntu/Debian: \code{sudo apt-get install tabix}
\item CentOS/RHEL: \code{sudo yum install tabix}
\item macOS: \code{brew install htslib}
}
}

\examples{
\dontrun{
# Example usage with sample data
library(data.table)

# Create sample summary statistics
sumstats <- data.table(
  CHR_hg38 = c("1", "1", "2"),
  POS_hg38 = c(10001, 10002, 20001),
  A1_hg38 = c("T", "A", "G"),
  A2_hg38 = c("A", "C", "C")
)

# Find names by position
result <- name_by_position(
  sumstats = sumstats,
  dbSNP_file = "path/to/dbSNP_file.vcf.gz",
  tabix_bin = "/usr/bin/tabix"
)

# Check matching statistics in console output
print(result)
}

}
