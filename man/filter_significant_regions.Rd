% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colocalization.R
\name{filter_significant_regions}
\alias{filter_significant_regions}
\title{Filter summary statistics to regions with significant variants}
\usage{
filter_significant_regions(sumstats_form, nlog10P_min_save = 6)
}
\arguments{
\item{sumstats_form}{A formatted summary statistics object of class 'sumstats_form'
containing columns CHR, POS, and nlog10P. Must have a 'coloc_regions_PASS'
attribute defining the genomic regions to test.}

\item{nlog10P_min_save}{Numeric. Minimum -log10(p-value) threshold for considering
a variant as significant. Default is 6 (corresponding to p < 1e-6). Regions
containing at least one variant exceeding this threshold are retained.}
}
\value{
A filtered summary statistics object containing only variants within
significant regions. Returns an empty data frame with preserved structure if
no regions meet the significance threshold. The 'coloc_regions_PASS' attribute
is updated to reflect only the retained regions.
}
\description{
Filters a formatted summary statistics object to retain only genomic regions
that contain at least one variant exceeding a significance threshold. This is
useful for reducing computational burden by excluding regions unlikely to show
colocalization signals. The function handles overlapping regions correctly by
retaining all variants within any significant region.
}
\details{
The function performs the following steps:
\enumerate{
\item Identifies regions containing at least one variant with nlog10P > threshold
\item Collects all variants within these significant regions (handles overlaps)
\item Updates the coloc_regions_PASS attribute to match filtered regions
}

Regions may overlap, so the function ensures that all variants belonging to any
significant region are retained, even if they also belong to non-significant regions.
}
\examples{
\dontrun{
# Filter to keep only regions with suggestive GWAS signals (p < 1e-6)
sumstats_filtered <- filter_significant_regions(sumstats_form, nlog10P_min_save = 6)

# Filter to keep only regions with genome-wide significant signals (p < 5e-8)
sumstats_filtered <- filter_significant_regions(sumstats_form, nlog10P_min_save = 7.3)
}
}
