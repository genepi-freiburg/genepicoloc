% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colocalization.R
\name{genepicoloc_wrapper}
\alias{genepicoloc_wrapper}
\title{Wrapper for parallel colocalization analysis}
\usage{
genepicoloc_wrapper(
  dir_out,
  sumstats_1_form,
  args_df,
  mc_cores = 10,
  test_mode = FALSE,
  verbose = TRUE,
  debug_mode = FALSE,
  progress_interval = 5,
  max_regions_per_job = 100,
  collect_output = TRUE
)
}
\arguments{
\item{dir_out}{Character string. Output directory path where results will be saved.
Directory will be created if it doesn't exist.}

\item{sumstats_1_form}{A formatted sumstats object containing the primary dataset.
Must have a "coloc_regions_PASS" attribute containing regions to analyze.}

\item{args_df}{A data.table/data.frame with columns:
\itemize{
\item sumstats_2_study: Study identifier for secondary dataset
\item sumstats_2_file: Path to secondary summary statistics file
\item sumstats_2_function: Function name to process secondary data
\item sumstats_2_type: Type of summary statistics ('quant' or 'cc')
\item sumstats_2_sdY: Standard deviation for quantitative traits
}}

\item{mc_cores}{Integer. Number of cores for parallel processing (default: 10).
Ignored when debug_mode = TRUE.}

\item{test_mode}{Logical. Run in test mode with limited execution (default: FALSE).
Processes only the first region and first entry per study.}

\item{verbose}{Logical. Print detailed progress messages (default: TRUE).}

\item{debug_mode}{Logical. Run sequentially for debugging (default: FALSE).
Overrides mc_cores setting.}

\item{progress_interval}{Numeric. How often to check progress in seconds (default: 5).
Only used when verbose = TRUE.}

\item{max_regions_per_job}{Integer. Maximum number of regions per job (default: 100).
Jobs will be split if coloc_regions_PASS exceeds this number.}

\item{collect_output}{Logical. Collect and consolidate output from job subfolders (default: TRUE).
Creates consolidated files in main directory and archives job folders.}
}
\value{
Invisibly returns NULL. Results are written to disk in the specified
output directory.
}
\description{
Orchestrates parallel colocalization analysis across multiple secondary datasets
against a primary dataset. Supports different parallelization strategies and
includes options for debugging and testing.
}
\details{
The function performs the following steps:
\enumerate{
\item Creates output directory structure
\item Saves input arguments to args_df.csv.gz for reproducibility
\item Runs colocalization analysis in parallel (or sequentially if debugging)
\item Each secondary dataset is processed by \code{\link{process_sumstats_form}}
\item If collect_output = TRUE, consolidates results from job subdirectories
}

In test mode, the output directory name is appended with "_test_mode" and
only the first region and first dataset per study are processed.

When coloc_regions_PASS has more than max_regions_per_job rows, the analysis
is automatically split into multiple jobs to manage computational load.
}
\examples{
\dontrun{
# Prepare arguments data frame
args_df <- data.frame(
  sumstats_2_study = c("Study1", "Study2"),
  sumstats_2_file = c("path/to/study1.gz", "path/to/study2.gz"),
  sumstats_2_function = "retrieve_sumstats_tabix",
  sumstats_2_type = "quant",
  sumstats_2_sdY = NA
)

# Run colocalization
genepicoloc_wrapper(
  dir_out = "results/coloc",
  sumstats_1_form = my_sumstats,
  args_df = args_df,
  mc_cores = 4,
  verbose = TRUE
)
}

}
